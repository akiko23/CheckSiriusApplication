import time

from aiogram import Bot, Dispatcher, executor, types

from db import Database
from markups import main_keyboard
from parse_sirius import get_data, most_main_check

bot = Bot('5215415202:AAHT-M0Ee1sfvjyhWqAJagNsRH3AwrRvu2k')

dp = Dispatcher(bot=bot)

db = Database(db_file='data.db')


@dp.message_handler(commands=['start'])
async def start(mes: types.Message):
    if mes.from_user.id == 818525681:
        get_data()
        time.sleep(1)

        if most_main_check():
            for i in range(20):
                await bot.send_message(818525681,
                                       '–ó–∞—è–≤–∫–∞ –Ω–∞ —Å–∞–π—Ç–µ!!!!!!!\nhttps://siriuscollege.ru/090207-informatsionnie-sistemi-i-programmirovanie')

        else:
            await bot.send_message(818525681, '–ó–∞—è–≤–∫–∏ –Ω–µ—Ç üòî')
    await bot.send_message(mes.from_user.id,
                           '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–Ω–∏–ª—Å–∞ (–ø—Ä–∏–º–µ—Ä: 111-111-511 17)\n–°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞—è–≤–∫–∏: /get_all', reply_markup=main_keyboard)


@dp.message_handler(commands=['get_all'])
async def get_all(mes: types.Message):
    if mes.from_user.id == 818525681:
        get_data()
        time.sleep(1)

        if most_main_check():
            for i in range(20):
                await bot.send_message(818525681,
                                       '–ó–∞—è–≤–∫–∞ –Ω–∞ —Å–∞–π—Ç–µ!!!!!!!\nhttps://siriuscollege.ru/090207-informatsionnie-sistemi-i-programmirovanie')

        else:
            await bot.send_message(818525681, '–ó–∞—è–≤–∫–∏ –Ω–µ—Ç üòî')

    all_data_list = [element for element in get_data()]

    for el in all_data_list:
        await bot.send_message(mes.from_user.id,
                               f"–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {el['count']}\n–°–ù–ò–õ–°: {el['snils']}\n–ë–∞–ª–ª—ã: {el['balls']}")


@dp.message_handler(content_types=['text'])
async def get_number(mes: types.Message):
    if mes.from_user.id == 818525681:
        get_data()
        time.sleep(1)

        if most_main_check():
            for i in range(20):
                await bot.send_message(818525681,
                                       '–ó–∞—è–≤–∫–∞ –Ω–∞ —Å–∞–π—Ç–µ!!!!!!!\nhttps://siriuscollege.ru/090207-informatsionnie-sistemi-i-programmirovanie')

        else:
            await bot.send_message(818525681, '–ó–∞—è–≤–∫–∏ –Ω–µ—Ç üòî')

    if mes.text == '–í—Å–µ_–ó–∞—è–≤–∫–∏':
        all_data_list = [element for element in get_data()]

        for el in all_data_list:
            await bot.send_message(mes.from_user.id,
                                   f"–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {el['count']}\n–°–ù–ò–õ–°: {el['snils']}\n–ë–∞–ª–ª—ã: {el['balls']}")

    elif mes.text == '–û–±–Ω–æ–≤–∏—Ç—å_–±–∞–∑—É':
        await bot.send_message(mes.chat.id, '–û–±–Ω–æ–≤–ª—è—é...')

        db.set_current_len(18)

        get_data()
        await bot.delete_message(mes.chat.id, mes.message_id + 1)

        await mes.answer('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ‚úÖ')

        new_len = len(get_data())

        if new_len > db.get_current_len():
            await bot.send_message(mes.from_user.id, f'–ï—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è. –ë—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {new_len - db.get_current_len()} –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫')
            db.delete_current_len(db.get_current_len())

            db.set_current_len(new_len)
        else:
            db.delete_current_len(db.get_current_len())
            await bot.send_message(mes.from_user.id, '–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç')
    else:

        try:
            number = db.get_data_with_snils(mes.text)[0]
            grade = db.get_data_with_snils(mes.text)[1]

            if number or grade is not None:
                await mes.answer(
                    f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –µ—Å—Ç—å –Ω–∞ —Å–∞–π—Ç–µ!\n–ù–æ–º–µ—Ä: {number}\n–û–±—â–∏–π –±–∞–ª–ª: {grade}\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ —Ç—É—Ç: https://siriuscollege.ru/090207-informatsionnie-sistemi-i-programmirovanie')

        except IndexError:
            await bot.send_message(mes.from_user.id, '–¢–∞–∫–æ–π –∑–∞—è–≤–∫–∏ –Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ')


if __name__ == '__main__':
    executor.start_polling(dp)
